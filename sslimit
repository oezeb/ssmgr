#!/bin/bash
# Set per-port quota in GB
LIMIT_GB=200

add() {
    local port=$1
    local limit_b=$((LIMIT_GB * 1024 * 1024 * 1024))
    local chain="QUOTA_$port"
    local cron_file="/etc/cron.d/${port}_quota_reset"

    # Create a unique chain for this port
    iptables -t mangle -N $chain 2>/dev/null || true
    iptables -t mangle -F $chain

    # Allow up to LIMIT_GB
    iptables -t mangle -A $chain -m quota --quota $limit_b -j RETURN
    iptables -t mangle -A $chain -j DROP

    # Direct input/output traffic for this port through the port-specific quota chain
    iptables -t mangle -C PREROUTING -p tcp --dport $port -j $chain 2>/dev/null || iptables -t mangle -A PREROUTING -p tcp --dport $port -j $chain
    iptables -t mangle -C OUTPUT -p tcp --sport $port -j $chain 2>/dev/null || iptables -t mangle -A OUTPUT -p tcp --sport $port -j $chain

    # Add monthly cron job to reset counters
    echo "0 0 1 * * root iptables -t mangle -Z $chain" > "$cron_file"
    chmod 644 "$cron_file"
}

remove() {
    local port=$1
    local chain="QUOTA_$port"
    local cron_file="/etc/cron.d/${port}_quota_reset"

    # Delete all rules referencing this port
    iptables -t mangle -D PREROUTING -p tcp --dport $port -j $chain 2>/dev/null || true
    iptables -t mangle -D OUTPUT -p tcp --sport $port -j $chain 2>/dev/null || true

    # Flush and delete the quota chain
    iptables -t mangle -F $chain 2>/dev/null || true
    iptables -t mangle -X $chain 2>/dev/null || true

    # Remove the corresponding cron job
    rm -f "$cron_file"

}

reset() {
    local port=$1
    local chain="QUOTA_$port"

    iptables -t mangle -Z $chain
}

current() {
    local port=$1
    local chain="QUOTA_$port"

    echo "Usage for port $port (chain: $chain):"
    iptables -t mangle -L $chain -v -n
}

usage() {
    echo "Usage:"
    echo "  $0 add <port>     # Add quota limit for a port"
    echo "  $0 remove <port>  # Remove quota limit for a port"
    echo "  $0 reset <port>   # Reset quota for a port back to $LIMIT_GB GB"
    echo "  $0 status <port>  # Show current usage for a port"
    exit 1
}

# Check if we have root privileges
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# Check if we have a command and port
if [[ $# -lt 2 ]]; then
    usage
fi

case "$1" in
    add) add "$2" ;;
    remove) remove "$2" ;;
    reset) reset "$2" ;;
    current) current "$2" ;;
    *) usage ;;
esac
